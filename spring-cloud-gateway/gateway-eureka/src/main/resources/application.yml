server:
  port: 9025
spring:
  application:
    name: gateway-eureka
  cloud: # https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/appendix.html
    gateway:
      default-filters:
        - AddResponseHeader=author,xbw
        - AddRequestParameter=token,${random.uuid}
      routes:
        - id: netflix-eureka-producer
          uri: lb://netflix-eureka-producer
          predicates:
            - Path=/api/producer/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                # how many requests per second you want a user to be allowed to do, without any dropped requests. This is the rate at which the token bucket is filled.
                redis-rate-limiter.replenishRate: 10
                # the maximum number of requests a user is allowed to do in a single second. This is the number of tokens the token bucket can hold. Setting this value to zero blocks all requests.
                redis-rate-limiter.burstCapacity: 20
                # how many tokens a request costs. This is the number of tokens taken from the bucket for each request and defaults to 1.
                redis-rate-limiter.requestedTokens: 20
                key-resolver: "#{@customKeyResolver}"
                #key-resolver: "#{@userKeyResolver}"
            - name: Retry
              args:
                retries: 3 # default 3
                series: # default 5XX series
                  - CLIENT_ERROR
                  - SERVER_ERROR
                methods: GET,POST # default GET
                exceptions: # default IOException and TimeoutException
                  - java.io.IOException
                  - java.util.concurrent.TimeoutException
  redis: # for RequestRateLimiter, default none
    host: localhost
    password:
    database: 0
eureka:
  instance:
    appname: gateway-eureka
    hostname: 127.0.0.1
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/